
/** 
* This file has been auto-generated by '@kontent-ai/model-generator@8.0.0-19'.
* 
* (c) Kontent.ai
*  
* -------------------------------------------------------------------------------
* 
* Project: Kontent.ai Kickstart
* Environment: Developer Completed
* Id: 133f5ef8-66b1-0074-7d42-55371447aac4
* 
* -------------------------------------------------------------------------------
**/

import type { Elements } from "@kontent-ai/delivery-sdk";
import type { CoreContentType } from "../system/index.ts";
import type { EventType, EventTopic } from "../taxonomies/index.ts";

/**
 * Event
 *
 * Id: e97907ba-c5ae-53e6-bcb6-091bc89da3fa
 * Codename: event
 */
export type Event = CoreContentType<
  EventElementCodenames,
  {
    /**
     * Name
     *
     * Type: text
     * Required: true
     * Codename: name
     * Id: 60502ad7-d552-5435-af46-6f4df84c3ddd
     */
    readonly name: Elements.TextElement;
    /**
     * Image
     *
     * Type: asset
     * Required: true
     * Codename: image
     * Id: b13e797e-0e50-5ecb-aebc-05aa9e180864
     */
    readonly image: Elements.AssetsElement;
    /**
     * Start Date
     *
     * Type: date_time
     * Required: true
     * Codename: start_date
     * Id: 114ba02d-f9dd-5555-a78d-6798d1a835a0
     */
    readonly start_date: Elements.DateTimeElement;
    /**
     * End Date
     *
     * Type: date_time
     * Required: true
     * Codename: end_date
     * Id: a00fecf1-c7ff-5bed-8c40-2eba7460170a
     */
    readonly end_date: Elements.DateTimeElement;
    /**
     * Event Type
     *
     * Type: taxonomy
     * Required: true
     * Codename: event_type
     * Id: aa177aeb-9cd0-5a3a-a6b6-ca055fe2cae3
     */
    readonly event_type: Elements.TaxonomyElement<EventType, "event_type">;
    /**
     * Event Topic
     *
     * Type: taxonomy
     * Required: true
     * Codename: event_topic
     * Id: 0da8a57d-a1d5-5b1e-9b6e-6d28dc1a6caa
     */
    readonly event_topic: Elements.TaxonomyElement<EventTopic, "event_topic">;
    /**
     * Description
     *
     * Type: rich_text
     * Required: true
     * Codename: description
     * Id: 2a7a8e84-274c-5339-afd2-4865b643fbb2
     */
    readonly description: Elements.RichTextElement<CoreContentType>;
  },
  "event"
>;

/**
 * Type representing all available element codenames for Event
 */
export type EventElementCodenames =
  | "name"
  | "image"
  | "start_date"
  | "end_date"
  | "event_type"
  | "event_topic"
  | "description";

/**
 * Type guard for Event
 *
 * Id: e97907ba-c5ae-53e6-bcb6-091bc89da3fa
 * Codename: event
 */
export function isEvent(item: CoreContentType | undefined | null): item is Event {
  return item?.system?.type === "event";
}
